#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/

LinkedListNode<int> *reverse(LinkedListNode<int> *head)
{
    LinkedListNode<int> *prev=NULL;
    LinkedListNode<int> *curr=head;
    LinkedListNode<int> *nxt=NULL;

    while(curr!=NULL)
    {
        nxt=curr->next;
        curr->next=prev;
        prev=curr;
        curr=nxt;
    }
    return prev;
}

LinkedListNode<int> *middle(LinkedListNode<int> *head)
{
    LinkedListNode<int> *slow=head;
    LinkedListNode<int> *fast=head->next;

    while(fast!=NULL && fast->next != NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
}
bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.

    if(head==NULL || head->next==NULL)
        return true;
    LinkedListNode<int> *mid=middle(head);

    mid->next=reverse(mid->next);

    LinkedListNode<int> *h1=head;
    LinkedListNode<int> *h2=mid->next;

    while(h2!=NULL)
    {
        if(h1->data != h2->data)
            return false;
        else
        {
            h1=h1->next;
            h2=h2->next;
        }
    }
    mid->next=reverse(mid->next);
    return true;
}
